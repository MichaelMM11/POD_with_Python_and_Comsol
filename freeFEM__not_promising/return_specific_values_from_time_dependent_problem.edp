// https://doc.freefem.org/tutorials/thermalConduction.html
// Parameters
func u0 = 10. + 90.*x/6.;
func k = 1.8*(y<0.5) + 0.2;
real ue = 25.;
real alpha=0.25;
real T=5.;
real dt=0.1 ;

// Mesh
mesh Th = square(30, 5, [6.*x,y]);

// Fespace
fespace Vh(Th, P1);
Vh u=u0, v, uold;

// Problem
problem thermic(u, v)
    = int2d(Th)(
          u*v/dt
        + k*(
              dx(u) * dx(v)
            + dy(u) * dy(v)
        )
    )
    + int1d(Th, 1, 3)(
          alpha*u*v
    )
    - int1d(Th, 1, 3)(
          alpha*ue*v
    )
    - int2d(Th)(
          uold*v/dt
    )
    + on(2, 4, u=u0)
    ;

    // Time iterations
    ofstream ff("thermic.dat");
    for(real t = 0; t < T; t += dt){
        uold = u; //equivalent to u^{n-1} = u^n
        thermic; //here the thermic problem is solved
        ff << u(0., 0.5) << endl;
        ff << u << endl;
        plot(u);
}

plot(Th);
load "iovtk"
load "medit"
savemesh(Th,"export_mesh.msh");
int[int] Order = [1];
string DataName = "u";
savevtk("u.vtu", Th, u, dataname=DataName, order=Order);

ofstream f("toto.txt"); f << u []; // to save the solution


for(int i = 0; i < 20; i++)
  cout << dy(u)(6.0*i/20.0,0.9) << endl;
